services:
  traefik:
    image: "traefik:v3.0"
    container_name: "traefik"
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.secureweb.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    profiles:
      - infra

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9000:9000
      - 9443:9443
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    profiles:
      - infra
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.lan`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.entrypoints=web"

  dashy:
    container_name: Dashy    
    image: lissy93/dashy    
    # Pass in your config file below, by specifying the path on your host machine    
    volumes:
       - dashy-config:/app/user-data
    ports:      
      - 4000:8080    
    # Set any environmental variables    
    environment:      
      - NODE_ENV=production    
    restart: unless-stopped    
    healthcheck:      
      test: ['CMD', 'node', '/app/services/healthcheck']      
      interval: 1m30s      
      timeout: 10s      
      retries: 3      
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashy.rule=Host(`dashy.lan`)"
      - "traefik.http.routers.dashy.entrypoints=web"
      
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      #      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8099:80/tcp"
    environment:
      TZ: 'Europe/Amsterdam'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - type: bind
        source: config/pihole/etc-pihole
        target: /etc/pihole
      - type: bind
        source: config/pihole/etc-dnsmasq.d
        target: /etc/dnsmasq.d
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    profiles:
      - infra
    labels:
      - "traefik.frontend.rule=HostRegexp:pihole.homedomain.lan,{catchall:.*}"
      - "traefik.frontend.priority=1"
      - "traefik.backend=pihole"
      - "traefik.port=80"
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.lan`)"
      - "traefik.http.routers.pihole.entrypoints=web"
      - "traefik.http.services.pihole.loadbalancer.server.port=8099"

  omada:
    container_name: omada
    image: mbentley/omada-controller:latest
    profiles:
      - network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omada.rule=Host(`omada.lan`)"
      - "traefik.http.services.omada.loadbalancer.server.port=8043"
      - "traefik.http.routers.omada.entrypoints=web"

# Persistent data volumes
volumes:
  dashy-config:
  proxy-manager-data:
  portainer-data:
  influxdb-data:
  mosquitto-data:
